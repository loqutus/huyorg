---
- name: install packages
  apt: name={{item}} state=installed update_cache=yes
  with_items:
    - ntp
    - atop
    - docker-compose
    - libboost-program-options1.58.0
    - libboost-system1.58.0
    - libboost-thread1.58.0
    - byobu
    - cpuburn
    - strace
    - libcurlpp0
    - nload
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  tags: packages

- name: ensure packages is not installed
  apt: name={{item}} state=absent update_cache=yes
  with_items:
    - glusterfs-server
    - glusterfs-common
    - glusterfs-client
    - docker.io

- name: add docker apt key
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg state=present

- name: add docker apt repository
  apt_repository:
    repo: deb [arch=armhf] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: add kubernetes apt key
  apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg state=present

- name: add kubernetes repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
      
- name: install docker package
  apt: name=docker-ce state=installed

- name: install kubeadm
  apt: name=kubeadm state=installed

- name: add user to docker group
  user: name=rusik groups=docker

- name: pi names in hosts
  lineinfile: dest=/etc/hosts line={{item}}
  with_items:
    - 10.0.0.1 pi1
    - 10.0.0.2 pi2
    - 10.0.0.3 pi3
    - 10.0.0.4 pi4
    - 10.0..0.5 pi5
  tags: hosts

- name: copy sudoers file
  copy: src=sudoers dest=/etc/sudoers force=yes mode=0440
  tags: sudoers

  #- name: remove swap file
  #  lineinfile: dest=/etc/fstab state=absent line='/var/swap none swap sw 0 0'
  #register: swap_fstab

  #- name: disable swap
  # shell: swapoff -a
  #when: swap_fstab.changed

  #- name: rm swap
  #file: dest=/var/swap state=absent force=yes
  #when: swap_fstab.changed

- name: copy vimrc
  copy: src=vimrc dest=/home/rusik/.vimrc

  #- name: copy docker defaults
  #copy: src=docker dest=/etc/default/docker
  #register: docker_file

  #- name: restart docker on defaults file change
  #service: name=docker state=restarted
  #when: docker_file.changed

- name: copy burn.sh
  copy: src=burn.sh dest=/usr/local/bin/burn.sh mode=755 owner=root

- name: copy temp.sh
  copy: src=temp.sh dest=/usr/local/bin/temp.sh mode=755 owner=root

- name: UseDNS no in sshd config
  lineinfile: dest=/etc/ssh/sshd_config state=present line='UseDNS no'
  register: sshd_config

- name: restart sshd on ssh_config change
  service: name=ssh state=restarted
  when: sshd_config.changed

